{"ast":null,"code":"import _defineProperty from \"/Users/kmcalear/workspace/dumbo-web-062419/36-component-lifecycle/chat-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kmcalear/workspace/dumbo-web-062419/36-component-lifecycle/chat-app/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channels: [],\n      currentChannel: {\n        messages: []\n      },\n      currentUser: {}\n    };\n\n    this.handleNewChannel = channelName => {\n      const newChannel = {\n        name: \"#\".concat(channelName),\n        messages: []\n      };\n      this.setState({\n        channels: [...this.state.channels, newChannel]\n      });\n    };\n\n    this.handleChangeChannel = channelName => {\n      const selectedChannel = this.state.channels.find(channelObj => channelObj.name === channelName);\n      this.setState({\n        currentChannel: selectedChannel\n      });\n    };\n\n    this.handleNewMessage = messageText => {\n      const newMessage = {\n        user: this.state.currentUser,\n        content: {\n          text: messageText\n        }\n      };\n\n      const updatedChannel = _objectSpread({}, this.state.currentChannel, {\n        messages: [...this.state.currentChannel.messages, newMessage]\n      });\n\n      const updatedChannels = this.state.channels.map(channel => {\n        if (channel.name === updatedChannel.name) {\n          return updatedChannel;\n        } else {\n          return channel;\n        }\n      });\n      this.setState({\n        currentChannel: updatedChannel,\n        channels: updatedChannels\n      });\n    };\n  }\n\n  render() {\n    const channelNames = this.state.channels.map(channelObj => channelObj.name); // if (!this.state.currentUser.id) {\n    //   return <h1>Yo, you need a current user, silly!</h1>\n    // }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.currentUser.id ? React.createElement(Sidebar, {\n      onNewChannel: this.handleNewChannel,\n      onChangeChannel: this.handleChangeChannel,\n      channelNames: channelNames,\n      user: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }) : React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Login!\"), React.createElement(Chat, {\n      onNewMessage: this.handleNewMessage,\n      channel: this.state.currentChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kmcalear/workspace/dumbo-web-062419/36-component-lifecycle/chat-app/src/App.js"],"names":["React","Sidebar","Chat","App","Component","state","channels","currentChannel","messages","currentUser","handleNewChannel","channelName","newChannel","name","setState","handleChangeChannel","selectedChannel","find","channelObj","handleNewMessage","messageText","newMessage","user","content","text","updatedChannel","updatedChannels","map","channel","render","channelNames","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css'\nimport Sidebar from './Sidebar'\nimport Chat from './Chat'\n\nclass App extends React.Component {\n  state = {\n    channels: [],\n    currentChannel: {\n      messages: []\n    },\n    currentUser: {}\n  }\n\n  handleNewChannel = (channelName) => {\n    const newChannel = {\n      name: `#${channelName}`,\n      messages: []\n    }\n    this.setState({channels: [...this.state.channels, newChannel]})\n  }\n\n  handleChangeChannel = (channelName) => {\n    const selectedChannel = this.state.channels.find(channelObj => channelObj.name === channelName)\n    this.setState({ currentChannel: selectedChannel })\n  }\n\n  handleNewMessage = (messageText) => {\n    const newMessage = {\n      user: this.state.currentUser,\n      content: {\n        text: messageText\n      }\n    }\n\n    const updatedChannel = {\n      ...this.state.currentChannel,\n      messages: [...this.state.currentChannel.messages, newMessage]\n    }\n\n    const updatedChannels = this.state.channels.map(channel => {\n      if (channel.name === updatedChannel.name) {\n        return updatedChannel\n      } else {\n        return channel\n      }\n    })\n\n    this.setState({ currentChannel: updatedChannel, channels: updatedChannels })\n\n  }\n\n  render() {\n    const channelNames = this.state.channels.map(channelObj => channelObj.name)\n    // if (!this.state.currentUser.id) {\n    //   return <h1>Yo, you need a current user, silly!</h1>\n    // }\n    return (\n      <div className=\"container\">\n        {\n          this.state.currentUser.id ? (\n            <Sidebar\n              onNewChannel={this.handleNewChannel}\n              onChangeChannel={this.handleChangeChannel}\n              channelNames={channelNames}\n              user={this.state.currentUser} />\n          ) : (<h4>Login!</h4>)\n        }\n\n        <Chat\n          onNewMessage={this.handleNewMessage}\n          channel={this.state.currentChannel} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}