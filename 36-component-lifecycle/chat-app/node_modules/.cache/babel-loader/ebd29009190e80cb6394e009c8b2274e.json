{"ast":null,"code":"import _defineProperty from \"/Users/kmcalear/workspace/dumbo-web-062419/36-component-lifecycle/chat-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kmcalear/workspace/dumbo-web-062419/36-component-lifecycle/chat-app/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      channels: data.channels,\n      currentChannel: data.channels[3],\n      currentUser: data.current_user\n    };\n\n    this.handleNewChannel = channelName => {\n      const newChannel = {\n        name: \"#\".concat(channelName),\n        messages: []\n      };\n      this.setState({\n        channels: [...this.state.channels, newChannel]\n      });\n    };\n\n    this.handleChangeChannel = channelName => {\n      const selectedChannel = this.state.channels.find(channelObj => channelObj.name === channelName);\n      this.setState({\n        currentChannel: selectedChannel\n      });\n    };\n\n    this.handleNewMessage = messageText => {\n      const newMessage = {\n        user: this.state.currentUser,\n        content: {\n          text: messageText\n        }\n      };\n\n      const updatedChannel = _objectSpread({}, this.state.currentChannel, {\n        messages: [...this.state.currentChannel.messages, newMessage]\n      });\n\n      const updatedChannels = this.state.channels.map(channel => {\n        if (channel.name === updatedChannel.name) {\n          return updatedChannel;\n        } else {\n          return channel;\n        }\n      });\n      this.setState({\n        currentChannel: updatedChannel,\n        channels: updatedChannels\n      });\n    };\n  }\n\n  render() {\n    const channelNames = this.state.channels.map(channelObj => channelObj.name);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      onNewChannel: this.handleNewChannel,\n      onChangeChannel: this.handleChangeChannel,\n      channelNames: channelNames,\n      user: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Chat, {\n      onNewMessage: this.handleNewMessage,\n      channel: this.state.currentChannel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kmcalear/workspace/dumbo-web-062419/36-component-lifecycle/chat-app/src/App.js"],"names":["React","Sidebar","Chat","App","Component","state","channels","data","currentChannel","currentUser","current_user","handleNewChannel","channelName","newChannel","name","messages","setState","handleChangeChannel","selectedChannel","find","channelObj","handleNewMessage","messageText","newMessage","user","content","text","updatedChannel","updatedChannels","map","channel","render","channelNames"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,QAAQ,EAAEC,IAAI,CAACD,QADT;AAENE,MAAAA,cAAc,EAAED,IAAI,CAACD,QAAL,CAAc,CAAd,CAFV;AAGNG,MAAAA,WAAW,EAAEF,IAAI,CAACG;AAHZ,KADwB;;AAAA,SAOhCC,gBAPgC,GAOZC,WAAD,IAAiB;AAClC,YAAMC,UAAU,GAAG;AACjBC,QAAAA,IAAI,aAAMF,WAAN,CADa;AAEjBG,QAAAA,QAAQ,EAAE;AAFO,OAAnB;AAIA,WAAKC,QAAL,CAAc;AAACV,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,EAAyBO,UAAzB;AAAX,OAAd;AACD,KAb+B;;AAAA,SAehCI,mBAfgC,GAeTL,WAAD,IAAiB;AACrC,YAAMM,eAAe,GAAG,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,IAApB,CAAyBC,UAAU,IAAIA,UAAU,CAACN,IAAX,KAAoBF,WAA3D,CAAxB;AACA,WAAKI,QAAL,CAAc;AAAER,QAAAA,cAAc,EAAEU;AAAlB,OAAd;AACD,KAlB+B;;AAAA,SAoBhCG,gBApBgC,GAoBZC,WAAD,IAAiB;AAClC,YAAMC,UAAU,GAAG;AACjBC,QAAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWI,WADA;AAEjBgB,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAEJ;AADC;AAFQ,OAAnB;;AAOA,YAAMK,cAAc,qBACf,KAAKtB,KAAL,CAAWG,cADI;AAElBO,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKV,KAAL,CAAWG,cAAX,CAA0BO,QAA9B,EAAwCQ,UAAxC;AAFQ,QAApB;;AAKA,YAAMK,eAAe,GAAG,KAAKvB,KAAL,CAAWC,QAAX,CAAoBuB,GAApB,CAAwBC,OAAO,IAAI;AACzD,YAAIA,OAAO,CAAChB,IAAR,KAAiBa,cAAc,CAACb,IAApC,EAA0C;AACxC,iBAAOa,cAAP;AACD,SAFD,MAEO;AACL,iBAAOG,OAAP;AACD;AACF,OANuB,CAAxB;AAQA,WAAKd,QAAL,CAAc;AAAER,QAAAA,cAAc,EAAEmB,cAAlB;AAAkCrB,QAAAA,QAAQ,EAAEsB;AAA5C,OAAd;AAED,KA3C+B;AAAA;;AA6ChCG,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG,KAAK3B,KAAL,CAAWC,QAAX,CAAoBuB,GAApB,CAAwBT,UAAU,IAAIA,UAAU,CAACN,IAAjD,CAArB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,YAAY,EAAE,KAAKH,gBADrB;AAEE,MAAA,eAAe,EAAE,KAAKM,mBAFxB;AAGE,MAAA,YAAY,EAAEe,YAHhB;AAIE,MAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWI,WAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,IAAD;AACE,MAAA,YAAY,EAAE,KAAKY,gBADrB;AAEE,MAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWG,cAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAYD;;AA3D+B;;AA8DlC,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport './App.css'\nimport Sidebar from './Sidebar'\nimport Chat from './Chat'\n\nclass App extends React.Component {\n  state = {\n    channels: data.channels,\n    currentChannel: data.channels[3],\n    currentUser: data.current_user\n  }\n\n  handleNewChannel = (channelName) => {\n    const newChannel = {\n      name: `#${channelName}`,\n      messages: []\n    }\n    this.setState({channels: [...this.state.channels, newChannel]})\n  }\n\n  handleChangeChannel = (channelName) => {\n    const selectedChannel = this.state.channels.find(channelObj => channelObj.name === channelName)\n    this.setState({ currentChannel: selectedChannel })\n  }\n\n  handleNewMessage = (messageText) => {\n    const newMessage = {\n      user: this.state.currentUser,\n      content: {\n        text: messageText\n      }\n    }\n\n    const updatedChannel = {\n      ...this.state.currentChannel,\n      messages: [...this.state.currentChannel.messages, newMessage]\n    }\n\n    const updatedChannels = this.state.channels.map(channel => {\n      if (channel.name === updatedChannel.name) {\n        return updatedChannel\n      } else {\n        return channel\n      }\n    })\n\n    this.setState({ currentChannel: updatedChannel, channels: updatedChannels })\n\n  }\n\n  render() {\n    const channelNames = this.state.channels.map(channelObj => channelObj.name)\n    return (\n      <div className=\"container\">\n        <Sidebar\n          onNewChannel={this.handleNewChannel}\n          onChangeChannel={this.handleChangeChannel}\n          channelNames={channelNames}\n          user={this.state.currentUser} />\n        <Chat\n          onNewMessage={this.handleNewMessage}\n          channel={this.state.currentChannel} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}